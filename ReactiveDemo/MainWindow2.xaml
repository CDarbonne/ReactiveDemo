<Window x:Class="ReactiveDemo.MainWindow2"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        Title="NuGet Browser" mc:Ignorable="d" Height="450" Width="800">
    <Window.Resources>
        <ResourceDictionary>
            <!-- 
            Here we declare the value converter that we've implemented 
            on the previous step. We will need it later to convert the
            IsAvailable boolean property to Visibility.
            -->
            <BooleanToVisibilityConverter x:Key="BoolToVisible" />
        </ResourceDictionary>
    </Window.Resources>
    <Grid Margin="12">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <TextBlock FontSize="16" 
                   FontWeight="SemiBold" 
                   VerticalAlignment="Center" 
                   Text="Search for: "/>
        <!-- 
        Here we create a two-way binding for the SearchTerm property
        of our ViewModel. When a user types something into the TextBox,
        value of the SearchTerm property will be updated automatically.
        Don't forget to set UpdateSourceTrigger to PropertyChanged on
        WPF and UWP platforms.
        -->
        <TextBox Grid.Column="1" 
                 Margin="6 0 0 0"
                 Text="{Binding SearchTerm, 
                                Mode=TwoWay, 
                                UpdateSourceTrigger=PropertyChanged}"/>
        <!--
        Here we bind the IsAvailable property to ListView's Visibility
        using the value converter we've declared above. Also, we bind
        SearchResults list to ListView's ItemsSource.
        -->
        <ListBox Grid.ColumnSpan="3" 
                 Grid.Row="1" Margin="0,6,0,0" 
                 ItemsSource="{Binding SearchResults}"
                 HorizontalContentAlignment="Stretch"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 Visibility="{Binding IsAvailable, 
                                      Mode=OneWay,
                                      Converter={StaticResource BoolToVisible}}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Image Margin="6" Width="64" Height="64" 
                               Source="{Binding IconUrl, Mode=OneWay}"
                               HorizontalAlignment="Center" 
                               VerticalAlignment="Center"/>
                        <TextBlock Grid.Column="1" Margin="6"
                                   TextWrapping="WrapWithOverflow" 
                                   VerticalAlignment="Center">
                            <Run FontSize="14" FontWeight="SemiBold" 
                                 Text="{Binding Title, Mode=OneWay}"/>
                            <LineBreak />
                            <Run FontSize="12" Text="{Binding Description, Mode=OneWay}"/>
                            <LineBreak />
                            <Hyperlink Command="{Binding OpenPage}">Open</Hyperlink>
                        </TextBlock>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</Window>